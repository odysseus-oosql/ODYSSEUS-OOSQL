
/* Don't update this file; this file is automatically generated. */

/*
 * Actions of log records
 */
typedef enum LOG_Action_T_tag {
    LOG_ACTION_DUMMY_CLR=0,
    LOG_ACTION_LOT_DELETE_INTERNAL_ENTRIES=1,
    LOG_ACTION_LOT_DELETE_DATA=2,
    LOG_ACTION_LOT_INIT_INTERNAL_NODE_PAGE=3,
    LOG_ACTION_LOT_INIT_LEAF_NODE=4,
    LOG_ACTION_LOT_INSERT_DATA=5,
    LOG_ACTION_LOT_REPLACE_INTERNAL_ENTRIES=6,
    LOG_ACTION_LOT_UNDO_DELETE_INTERNAL_ENTRIES=7,
    LOG_ACTION_LOT_UPDATE_COUNT_FIELDS=8,
    LOG_ACTION_LOT_WRITE_DATA=9,
    LOG_ACTION_MLGF_CHANGE_LEAF_ENTRY=10,
    LOG_ACTION_MLGF_COPY_PAGE=11,
    LOG_ACTION_MLGF_DELETE_DIRECTORY_ENTRIES=12,
    LOG_ACTION_MLGF_DELETE_DIRECTORY_ENTRY=13,
    LOG_ACTION_MLGF_DELETE_LEAF_ENTRIES=14,
    LOG_ACTION_MLGF_DELETE_LEAF_ENTRY=15,
    LOG_ACTION_MLGF_DELETE_OBJECT_FROM_OVERFLOW_PAGE=16,
    LOG_ACTION_MLGF_DELETE_OBJECT_FROM_LEAF_ENTRY=17,
    LOG_ACTION_MLGF_DELETE_OBJECT_WITH_LEAF_ENTRY=18,
    LOG_ACTION_MLGF_DELETE_OBJECTS_FROM_OVERFLOW_PAGE=19,
    LOG_ACTION_MLGF_INIT_DIRECTORY_PAGE=20,
    LOG_ACTION_MLGF_INIT_LEAF_PAGE=21,
    LOG_ACTION_MLGF_INIT_OVERFLOW_PAGE=22,
    LOG_ACTION_MLGF_INSERT_DIRECTORY_ENTRIES=23,
    LOG_ACTION_MLGF_INSERT_DIRECTORY_ENTRY=24,
    LOG_ACTION_MLGF_INSERT_LEAF_ENTRIES=25,
    LOG_ACTION_MLGF_INSERT_LEAF_ENTRY=26,
    LOG_ACTION_MLGF_INSERT_OBJECT_INTO_LEAF_ENTRY=27,
    LOG_ACTION_MLGF_INSERT_OBJECT_INTO_OVERFLOW_PAGE=28,
    LOG_ACTION_MLGF_INSERT_OBJECT_WITH_LEAF_ENTRY=29,
    LOG_ACTION_MLGF_INSERT_OBJECTS_INTO_OVERFLOW_PAGE=30,
    LOG_ACTION_MLGF_MODIFY_DIRECTORY_ENTRY=31,
    LOG_ACTION_MLGF_MODIFY_INDEXID_OF_MLGF_PAGE=32,
    LOG_ACTION_MLGF_MODIFY_HASH_VALUES_OF_DIRECTORY_ENTRY=33,
    LOG_ACTION_MLGF_MODIFY_NUM_VALID_BITS_OF_DIRECTORY_ENTRY=34,
    LOG_ACTION_MLGF_MODIFY_OVERFLOW_CHAIN_NEXT_LINK=35,
    LOG_ACTION_MLGF_MODIFY_OVERFLOW_CHAIN_PREV_LINK=36,
    LOG_ACTION_MLGF_MODIFY_THETA_VALUE_OF_DIRECTORY_ENTRY=37,
    LOG_ACTION_MLGF_ROOT_PAGE_LEVEL_DOWN=38,
    LOG_ACTION_MLGF_ROOT_PAGE_LEVEL_UP=39,
    LOG_ACTION_OM_APPEND_TO_SMALL_OBJECT=40,
    LOG_ACTION_OM_CHANGE_OBJECT=41,
    LOG_ACTION_OM_CREATE_SMALL_OBJECT=42,
    LOG_ACTION_OM_DECREASE_OBJECT_HEADER_LENGTH=43,
    LOG_ACTION_OM_DELETE_FROM_SMALL_OBJECT=44,
    LOG_ACTION_OM_DESTROY_SMALL_OBJECT=45,
    LOG_ACTION_OM_GET_UNIQUES=46,
    LOG_ACTION_OM_INCREASE_OBJECT_HEADER_LENGTH=47,
    LOG_ACTION_OM_INIT_SLOTTED_PAGE=48,
    LOG_ACTION_OM_INSERT_INTO_SMALL_OBJECT=49,
    LOG_ACTION_OM_MODIFY_LAST_PAGE_IN_CATALOG_ENTRY=50,
    LOG_ACTION_OM_MODIFY_TRAIN_SEGMENT_ID_IN_CATALOG_ENTRY=51,
    LOG_ACTION_OM_MODIFY_PAGE_LIST_NEXT_LINK=52,
    LOG_ACTION_OM_MODIFY_PAGE_LIST_PREV_LINK=53,
    LOG_ACTION_OM_SET_OBJECT_HEADER=54,
    LOG_ACTION_OM_WRITE_SMALL_OBJECT=55,
    LOG_ACTION_RDSM_ALLOC_TRAINS=56,
    LOG_ACTION_RDSM_DELETE_METADICTENTRY=57,
    LOG_ACTION_RDSM_FREE_TRAINS=58,
    LOG_ACTION_RDSM_FREE_TRAINS_WITH_DEFERMENT=59,
    LOG_ACTION_RDSM_GET_UNIQUES=60,
    LOG_ACTION_RDSM_INSERT_METADICTENTRY=61,
    LOG_ACTION_RDSM_SET_METADICTENTRY=62,
    LOG_ACTION_RDSM_MODIFY_EXTENT_LINK=63,
    LOG_ACTION_RDSM_MODIFY_FREE_EXTENT_LIST_HEADER=64,
    LOG_ACTION_BTM_CHANGE_LEAF_ENTRY=65,
    LOG_ACTION_BTM_COPY_PAGE=66,
    LOG_ACTION_BTM_DELETE_INTERNAL_ENTRIES=67,
    LOG_ACTION_BTM_DELETE_INTERNAL_ENTRIES_WITHOUT_MORE_UPDATE=68,
    LOG_ACTION_BTM_DELETE_INTERNAL_ENTRY=69,
    LOG_ACTION_BTM_DELETE_LEAF_ENTRIES=70,
    LOG_ACTION_BTM_DELETE_LEAF_ENTRIES_WITHOUT_MORE_UPDATE=71,
    LOG_ACTION_BTM_DELETE_LEAF_ENTRY=72,
    LOG_ACTION_BTM_DELETE_OID_FROM_LEAF_ENTRY=73,
    LOG_ACTION_BTM_DELETE_OID_FROM_OVERFLOW_PAGE=74,
    LOG_ACTION_BTM_DELETE_OID_WITH_LEAF_ENTRY=75,
    LOG_ACTION_BTM_DELETE_OIDS_FROM_OVERFLOW_PAGE=76,
    LOG_ACTION_BTM_REPLACE_ROOT_PAGE_WITH_CHILD_PAGE=77,
    LOG_ACTION_BTM_INIT_INTERNAL_PAGE=78,
    LOG_ACTION_BTM_INIT_LEAF_PAGE=79,
    LOG_ACTION_BTM_INIT_OVERFLOW_PAGE=80,
    LOG_ACTION_BTM_INSERT_INTERNAL_ENTRIES=81,
    LOG_ACTION_BTM_INSERT_INTERNAL_ENTRY=82,
    LOG_ACTION_BTM_INSERT_LEAF_ENTRIES=83,
    LOG_ACTION_BTM_INSERT_LEAF_ENTRY=84,
    LOG_ACTION_BTM_INSERT_OID_INTO_LEAF_ENTRY=85,
    LOG_ACTION_BTM_INSERT_OID_INTO_OVERFLOW_PAGE=86,
    LOG_ACTION_BTM_INSERT_OID_WITH_LEAF_ENTRY=87,
    LOG_ACTION_BTM_INSERT_OIDS_INTO_OVERFLOW_PAGE=88,
    LOG_ACTION_BTM_MAKE_ROOT_PAGE=89,
    LOG_ACTION_BTM_MERGE_LEAF_PAGE=90,
    LOG_ACTION_BTM_MODIFY_FIRST_CHILD_OF_INTERNAL_PAGE=91,
    LOG_ACTION_BTM_MODIFY_INDEXID_OF_BTREE_PAGE=92,
    LOG_ACTION_BTM_MODIFY_LEAF_CHAIN_NEXT_LINK=93,
    LOG_ACTION_BTM_MODIFY_LEAF_CHAIN_PREV_LINK=94,
    LOG_ACTION_BTM_MODIFY_OVERFLOW_CHAIN_NEXT_LINK=95,
    LOG_ACTION_BTM_MODIFY_OVERFLOW_CHAIN_PREV_LINK=96,
    LOG_ACTION_BTM_REPLACE_INTERNAL_ENTRY_KEY_VALUE=97,
    LOG_ACTION_BTM_SPLIT_LEAF_PAGE=98,
    LOG_ACTION_BTM_SPLIT_OVERFLOW_PAGE=99,
    LOG_ACTION_BTM_UNDO_SPLIT_LEAF_PAGE=100,
    LOG_ACTION_BTM_UNDO_SPLIT_OVERFLOW_PAGE=101,
    LOG_ACTION_XACT_BEGIN_LOGGING_DEALLOC_LIST=102,
    LOG_ACTION_XACT_DEALLOC_LIST=103,
    LOG_ACTION_XACT_COMMIT_TRANSACTION=104,
    LOG_ACTION_XACT_ABORT_TRANSACTION=105,
    LOG_ACTION_XACT_PREPARE_TRANSACTION=106,
    LOG_ACTION_XACT_END_TRANSACTION=107,
    LOG_ACTION_XACT_PREPARE_LOCKS=108,
    LOG_ACTION_XACT_DELETE_ENTRY_FROM_DEALLOC_LIST=109,
    LOG_ACTION_CHKPT_BEGIN=110,
    LOG_ACTION_CHKPT_END=111,
    LOG_ACTION_CHKPT_ACTIVE_XACTS=112,
    LOG_ACTION_CHKPT_DIRTY_PAGES=113,
    LOG_ACTION_CHKPT_MOUNTED_VOLS=114,
    LOG_ACTION_VOL_MOUNT_VOLUME=115,
    LOG_ACTION_VOL_DISMOUNT_VOLUME=116
} LOG_Action_T;



/*
 * REDO/UNDO function prototypes
 */
Four Redo_LOT_DeleteInternalEntries(Four, void*, LOG_LogRecInfo_T*);
Four Undo_LOT_DeleteInternalEntries(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_LOT_DeleteData(Four, void*, LOG_LogRecInfo_T*);
Four Undo_LOT_DeleteData(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_LOT_InitInternalNodePage(Four, void*, LOG_LogRecInfo_T*);
Four Redo_LOT_InitLeafNode(Four, void*, LOG_LogRecInfo_T*);
Four Redo_LOT_InsertData(Four, void*, LOG_LogRecInfo_T*);
Four Undo_LOT_InsertData(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_LOT_ReplaceInternalEntries(Four, void*, LOG_LogRecInfo_T*);
Four Undo_LOT_ReplaceInternalEntries(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_LOT_UndoDeleteInternalEntries(Four, void*, LOG_LogRecInfo_T*);
Four Redo_LOT_UpdateCountFields(Four, void*, LOG_LogRecInfo_T*);
Four Undo_LOT_UpdateCountFields(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_LOT_WriteData(Four, void*, LOG_LogRecInfo_T*);
Four Undo_LOT_WriteData(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_ChangeLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_ChangeLeafEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_CopyPage(Four, void*, LOG_LogRecInfo_T*);
Four Redo_MLGF_DeleteDirectoryEntries(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_DeleteDirectoryEntries(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_DeleteDirectoryEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_DeleteDirectoryEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_DeleteLeafEntries(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_DeleteLeafEntries(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_DeleteLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_DeleteLeafEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_DeleteObjectFromOverflowPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_DeleteObjectFromOverflowPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_DeleteObjectFromLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_DeleteObjectFromLeafEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_DeleteObjectWithLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_DeleteObjectWithLeafEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_DeleteObjectsFromOverflowPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_DeleteObjectsFromOverflowPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_InitDirectoryPage(Four, void*, LOG_LogRecInfo_T*);
Four Redo_MLGF_InitLeafPage(Four, void*, LOG_LogRecInfo_T*);
Four Redo_MLGF_InitOverflowPage(Four, void*, LOG_LogRecInfo_T*);
Four Redo_MLGF_InsertDirectoryEntries(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_InsertDirectoryEntries(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_InsertDirectoryEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_InsertDirectoryEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_InsertLeafEntries(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_InsertLeafEntries(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_InsertLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Redo_MLGF_InsertObjectIntoLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_InsertObjectIntoLeafEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_InsertObjectIntoOverflowPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_InsertObjectIntoOverflowPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_InsertObjectWithLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_InsertObjectWithLeafEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_InsertObjectsIntoOverflowPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_InsertObjectsIntoOverflowPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_ModifyDirectoryEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_ModifyDirectoryEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_ModifyIndexIdOfMlgfPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_ModifyIndexIdOfMlgfPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_ModifyHashValuesOfDirectoryEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_ModifyHashValuesOfDirectoryEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_ModifyNumValidBitsOfDirectoryEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_ModifyNumValidBitsOfDirectoryEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_ModifyOverflowChainNextLink(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_ModifyOverflowChainNextLink(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_ModifyOverflowChainPrevLink(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_ModifyOverflowChainPrevLink(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_ModifyThetaValueOfDirectoryEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_ModifyThetaValueOfDirectoryEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_RootPageLevelDown(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_RootPageLevelDown(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_MLGF_RootPageLevelUp(Four, void*, LOG_LogRecInfo_T*);
Four Undo_MLGF_RootPageLevelUp(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_AppendToSmallObject(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_AppendToSmallObject(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_ChangeObject(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_ChangeObject(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_CreateSmallObject(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_CreateSmallObject(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_DecreaseObjHdrLength(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_DecreaseObjHdrLength(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_DeleteFromSmallObject(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_DeleteFromSmallObject(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_DestroySmallObject(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_DestroySmallObject(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_GetUniques(Four, void*, LOG_LogRecInfo_T*);
Four Redo_OM_IncreaseObjHdrLength(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_IncreaseObjHdrLength(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_InitSlottedPage(Four, void*, LOG_LogRecInfo_T*);
Four Redo_OM_InsertIntoSmallObject(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_InsertIntoSmallObject(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_ModifyLastPageInCatalog(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_ModifyLastPageInCatalog(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_ModifyTrainSegmentIDInCatalog(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_ModifyTrainSegmentIDInCatalog(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_ModifyPageListNextLink(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_ModifyPageListNextLink(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_ModifyPageListPrevLink(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_ModifyPageListPrevLink(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_SetObjectHdr(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_SetObjectHdr(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_OM_WriteSmallObject(Four, void*, LOG_LogRecInfo_T*);
Four Undo_OM_WriteSmallObject(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_RDsM_AllocTrains(Four, void*, LOG_LogRecInfo_T*);
Four Undo_RDsM_AllocTrains(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_RDsM_DeleteMetaDictEntry(Four, void*, LOG_LogRecInfo_T*);
Four Redo_RDsM_FreeTrains(Four, void*, LOG_LogRecInfo_T*);
Four Undo_RDsM_FreeTrains(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_RDsM_FreeTrainsWithDeferment(Four, void*, LOG_LogRecInfo_T*);
Four Undo_RDsM_FreeTrains(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_RDsM_GetUniques(Four, void*, LOG_LogRecInfo_T*);
Four Redo_RDsM_InsertMetaDictEntry(Four, void*, LOG_LogRecInfo_T*);
Four Redo_RDsM_SetMetaDictEntry(Four, void*, LOG_LogRecInfo_T*);
Four Redo_RDsM_Modify_Extent_Link(Four, void*, LOG_LogRecInfo_T*);
Four Undo_RDsM_Modify_Extent_Link(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_RDsM_Modify_Free_Extent_List_Header(Four, void*, LOG_LogRecInfo_T*);
Four Undo_RDsM_Modify_Free_Extent_List_Header(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_ChangeLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_ChangeLeafEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_CopyPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_CopyPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_DeleteInternalEntries(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_DeleteInternalEntries(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_DeleteInternalEntries(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_DeleteInternalEntriesWithoutMoreUpdate(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_DeleteInternalEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_DeleteInternalEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_DeleteLeafEntries(Four, void*, LOG_LogRecInfo_T*);
Four Redo_BtM_DeleteLeafEntries(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_DeleteLeafEntriesWithoutMoreUpdate(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_DeleteLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_DeleteLeafEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_DeleteOidFromLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_DeleteOidFromLeafEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_DeleteOidFromOverflowPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_DeleteOidFromOverflowPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_DeleteOidWithLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_DeleteOidWithLeafEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_DeleteOidsFromOverflowPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_DeleteOidsFromOverflowPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_ReplaceRootPageWithChildPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_ReplaceRootPageWithChildPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_InitInternalPage(Four, void*, LOG_LogRecInfo_T*);
Four Redo_BtM_InitLeafPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_InitLeafPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_InitOverflowPage(Four, void*, LOG_LogRecInfo_T*);
Four Redo_BtM_InsertInternalEntries(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_InsertInternalEntries(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_InsertInternalEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_InsertInternalEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_InsertLeafEntries(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_InsertLeafEntries(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_InsertLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Redo_BtM_InsertOidIntoLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_InsertOidIntoLeafEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_InsertOidIntoOverflowPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_InsertOidIntoOverflowPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_InsertOidWithLeafEntry(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_InsertOidWithLeafEntry(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_InsertOidsIntoOverflowPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_InsertOidsIntoOverflowPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_MakeRootPage(Four, void*, LOG_LogRecInfo_T*);
Four Redo_BtM_MergeLeafPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_MergeLeafPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_ModifyFirstChildOfInternalPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_ModifyFirstChildOfInternalPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_ModifyIndexIdOfBtreePage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_ModifyIndexIdOfBtreePage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_ModifyLeafChainNextLink(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_ModifyLeafChainNextLink(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_ModifyLeafChainPrevLink(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_ModifyLeafChainPrevLink(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_ModifyOverflowChainNextLink(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_ModifyOverflowChainNextLink(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_ModifyOverflowChainPrevLink(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_ModifyOverflowChainPrevLink(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_ReplaceInternalEntryKeyValue(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_ReplaceInternalEntryKeyValue(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_SplitLeafPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_SplitLeafPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_SplitOverflowPage(Four, void*, LOG_LogRecInfo_T*);
Four Undo_BtM_SplitOverflowPage(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);
Four Redo_BtM_UndoSplitLeafPage(Four, void*, LOG_LogRecInfo_T*);
Four Redo_BtM_UndoSplitOverflowPage(Four, void*, LOG_LogRecInfo_T*);



/*
 * Log Record Table
 */
typedef Four (*LOG_RedoFnPtr_T)(Four, void*, LOG_LogRecInfo_T*);

typedef Four (*LOG_UndoFnPtr_T)(Four, XactTableEntry_T*, Buffer_ACC_CB*, Lsn_T*, LOG_LogRecInfo_T*);

typedef struct LOG_LogRecTableEntry_T_tag {
  Four bufType;		        /* buffer type */
  LOG_RedoFnPtr_T redoFnPtr;	/* pointer to the redo function */
  LOG_UndoFnPtr_T undoFnPtr;    /* pointer to the undo function */
} LOG_LogRecTableEntry_T;

